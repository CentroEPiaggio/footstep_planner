<launch>
	<!-- fake a primesense point cloud from a pcd file for testing placed somewhere in the world -->	
	<remap from="cloud_pcd" to="/camera/depth_registered/points"/>
	<node pkg="pcl_ros" name="fake_primesense" type="pcd_to_pointcloud" respawn="true" output="screen" args="$(find plane_segmentation)/resources/scene.pcd 0.1 _frame_id:=/camera_link"/>
	<node pkg="tf" type="static_transform_publisher" name="kinect_base_link5" args="0 0 0 0 0 0 1  /camera_link /world 100"/>

	<!-- the plane detector -->
	<node pkg="plane_segmentation" name="plane_detector" type="plane_segmentation_node" respawn="true" output="screen">
		<!--topic remapping-->
		<remap from="cloud_in" to="/camera/depth_registered/points" />
		<param name="inlier_threshold" value="500" />
		<param name="plane_detection_voxel_size" value="0.01" />
		<param name="min_cluster_size" value="30" />
		<param name="table_padding" value="0.02" />
		<!-- this value refer to the processing frame, typically the camera optical, for now, it is big enough to take the full point cloud -->
		<!-- param unless="$(arg tabletop_segmentation_convert_to_base_link)" name="up_direction" value="-1.0" /-->
		<param name="z_filter_min" value="-2.0" />
		<param name="z_filter_max" value="2.0" />
		<param name="y_filter_min" value="-2.0" />
		<param name="y_filter_max" value="2.0" />
		<param name="x_filter_min" value="-2.0" />
		<param name="x_filter_max" value="2.0" />

	</node>

	<!-- load a customized rviz -->
	<node name="$(anon rviz)" launch-prefix="" pkg="rviz" type="rviz" respawn="false" args="-d $(find plane_segmentation)/launch/rviz.rviz" output="screen"/>

</launch>